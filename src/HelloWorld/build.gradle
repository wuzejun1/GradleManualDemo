//hello world
task hello {
	doLast {
		println 'Hello world'
	}
}

//concise writing
task conciseHello << {
	println 'Hello conciseHello'
}

//groovy script demo1
task upper << {
	String someString = 'mY_nAmE'
	println "Original: " + someString
	println "Upper case: " + someString.toUpperCase()
}

//groovy script demo2
task count << {
	int counter = 10;
	println("I'm counting to " + counter)
	counter.times {print "${it + 1} "}
	println()
}

//task dependencies
task intro(dependsOn: hello) << {
	println "I'm Gradle"
}

//dynamic tasks
4.times { counter ->
    task "task$counter" << {
        println "I'm task number $counter"
    }
}

//Manipulating existing tasks
task0.dependsOn task2,task3

//adding behaviour
task helloEarth << {
	println 'hello Earth'
}
helloEarth.doFirst {
	println 'Hello Venus'
}
helloEarth.doLast {
	println 'Hello Mars'
}
helloEarth << {
	println 'Hello Jupiter'
}
helloEarth.doFirst {
	println 'Hello sol'
}

//Extra task properties
//warning do use properties as task, seems it is a keyword for gradle
task myProperties {
	ext.authorName = "JimWu"
}
task printProperties << {
	println "author:" + myProperties.authorName
}

//default Tasks
defaultTasks 'clean', 'run'
task clean << {
    println 'Default Cleaning!'
}
task run << {
    println 'Default Running!'
}
task other << {
    println "I'm not a default task!"
}

//judge the taskGraph to make configuration differently
task distribution << {
	println "We build the zip with version=$version"
}
task release(dependsOn: distribution) << {
	println "We release now"
}
gradle.taskGraph.whenReady {
	taskGraph -> 
		if (taskGraph.hasTask(release)) {
			version = '1.0'
		} else {
			version = '1.0-SNAPSHOT'
		}
}
